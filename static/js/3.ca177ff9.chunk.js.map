{"version":3,"sources":["pages/NotFound.js","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["NotFound","className","module","exports","NewCommentForm","props","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","id","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","text","quoteId","classes","form","onSubmit","LoadingSpinner","control","htmlFor","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","length","onClick","HighlightedQuote","quote","author","QuoteDetail","match","useRouteMatch","getSingleQuote","path","exact","to","url"],"mappings":"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","file":"static/js/3.ca177ff9.chunk.js","sourcesContent":["export const NotFound = () => {\n  return (\n    <div className=\"centered\">\n      <p>Page not found</p>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","import { useRef, useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment, id } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n    const enteredText = commentTextRef.current.value;\n    sendRequest({ commentData: { text: enteredText }, quoteId: id });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { id } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(id);\n  }, [id, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(id);\n  }, [sendRequest, id]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm id={id} onAddedComment={addedCommentHandler} />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { useEffect } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\n\nimport Comments from \"../components/comments/Comments\";\nimport HighLightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { NotFound } from \"./NotFound\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nexport const QuoteDetail = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n\n  const { id } = params;\n\n  const {\n    sendRequest,\n    status,\n    data: quote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(id);\n  }, [sendRequest, id]);\n\n  if (status === \"pending\")\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n\n  if (error) return <p className=\"centered\">{error}</p>;\n\n  if (!quote.text) {\n    return <NotFound />;\n  }\n  return (\n    <>\n      <HighLightedQuote text={quote.text} author={quote.author} />\n\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link to={`${match.url}/comments`} className=\"btn--flat\">\n            See comments\n          </Link>\n        </div>\n      </Route>\n\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </>\n  );\n};\n"],"sourceRoot":""}